@charset "UTF-8";
.container {
  margin-left: auto;
  /* 居中设定 */
  margin-right: auto;
  /* 居中设定 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */ }
  .container::after {
    /* 定义清除浮动混合宏 */
    content: "";
    display: table;
    clear: both;
    /* 清除浮动 */ }

span {
  text-align: center;
  color: #828282;
  font-size: 0.15rem;
  text-decoration: none;
  margin-top: 0.125rem; }

.row {
  margin-right: -15px;
  /* 负值外边距 */
  margin-left: -15px;
  /* 负值外边距 */ }
  .row::after {
    /* 定义清除浮动混合宏 */
    content: "";
    display: table;
    clear: both;
    /* 清除浮动 */ }

/* 循环生成 */
.col-xs-1 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 8.3333333333%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

/* 循环生成 */
.col-xs-2 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 16.6666666667%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

/* 循环生成 */
.col-xs-3 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 25%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

/* 循环生成 */
.col-xs-4 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 33.3333333333%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

/* 循环生成 */
.col-xs-5 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 41.6666666667%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

/* 循环生成 */
.col-xs-6 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 50%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

/* 循环生成 */
.col-xs-7 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 58.3333333333%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

/* 循环生成 */
.col-xs-8 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 66.6666666667%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

/* 循环生成 */
.col-xs-9 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 75%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

/* 循环生成 */
.col-xs-10 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 83.3333333333%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

/* 循环生成 */
.col-xs-11 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 91.6666666667%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

/* 循环生成 */
.col-xs-12 {
  /* 不同比例的列 */
  /* 定义栅格列混合宏 */
  float: left;
  /* 浮动 */
  width: 100%;
  /* 列宽 */
  position: relative;
  /* 相对定位 */
  min-height: 1px;
  /* 最小高度 */
  padding-right: 15px;
  /* 内边距 */
  padding-left: 15px;
  /* 内边距 */
  box-sizing: border-box;
  /* 将内边距纳入宽度计算 */
  /* 生成栅格列代码 */ }

@media (min-width: 414px) {
  /* 宽度大于 414px 的设备 */
  /* 循环生成 */
  .col-sm-1 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 8.3333333333%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ }

  /* 循环生成 */
  .col-sm-2 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 16.6666666667%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ }

  /* 循环生成 */
  .col-sm-3 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 25%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ }

  /* 循环生成 */
  .col-sm-4 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 33.3333333333%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ }

  /* 循环生成 */
  .col-sm-5 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 41.6666666667%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ }

  /* 循环生成 */
  .col-sm-6 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 50%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ }

  /* 循环生成 */
  .col-sm-7 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 58.3333333333%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ }

  /* 循环生成 */
  .col-sm-8 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 66.6666666667%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ }

  /* 循环生成 */
  .col-sm-9 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 75%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ }

  /* 循环生成 */
  .col-sm-10 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 83.3333333333%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ }

  /* 循环生成 */
  .col-sm-11 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 91.6666666667%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ }

  /* 循环生成 */
  .col-sm-12 {
    /* 特定设备下不同比例的列 */
    /* 定义栅格列混合宏 */
    float: left;
    /* 浮动 */
    width: 100%;
    /* 列宽 */
    position: relative;
    /* 相对定位 */
    min-height: 1px;
    /* 最小高度 */
    padding-right: 15px;
    /* 内边距 */
    padding-left: 15px;
    /* 内边距 */
    box-sizing: border-box;
    /* 将内边距纳入宽度计算 */
    /* 生成栅格列代码 */ } }

/*# sourceMappingURL=grid_with_media.css.map */
